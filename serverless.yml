# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: practical2API
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x

# you can overwrite defaults here
#  stage: dev
#  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
#  iam:
#    role:
#      statements:
#        - Effect: "Allow"
#          Action:
#            - "s3:ListBucket"
#          Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#        - Effect: "Allow"
#          Action:
#            - "s3:PutObject"
#          Resource:
#            Fn::Join:
#              - ""
#              - - "arn:aws:s3:::"
#                - "Ref" : "ServerlessDeploymentBucket"
#                - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  patterns:
#    - '!exclude-me.js'
#    - '!exclude-me-dir/**'
#    - include-me.js
#    - include-me-dir/**

functions:
  hello:
    handler: handler.hello
    events:
      - httpApi: 'GET /company/countries'
      - httpApi: 'POST /company/countries'
      - httpApi: 'PUT /company/countries/{id}'
      - httpApi: 'DELETE /company/countries/{id}'

      - httpApi: 'GET /company/departments'
      - httpApi: 'GET /company/departments/{id}'
      - httpApi: 'POST /company/departments'
      - httpApi: 'PUT /company/departments/{id}'
      - httpApi: 'DELETE /company/departments/{id}'

      - httpApi: 'GET /company/dependents'
      - httpApi: 'GET /company/dependents/{id}'
      - httpApi: 'POST /company/dependents'
      - httpApi: 'PUT /company/dependents/{id}'
      - httpApi: 'DELETE /company/dependents/{id}'

      - httpApi: 'GET /company/employees'
      - httpApi: 'GET /company/employees/{id}'
      - httpApi: 'POST /company/employees'
      - httpApi: 'PUT /company/employees/{id}'
      - httpApi: 'DELETE /company/employees/{id}'

      - httpApi: 'GET /company/jobs'
      - httpApi: 'GET /company/jobs/{id}'
      - httpApi: 'POST /company/jobs'
      - httpApi: 'PUT /company/jobs/{id}'
      - httpApi: 'DELETE /company/jobs/{id}'

      - httpApi: 'GET /company/locations'
      - httpApi: 'GET /company/locations/{id}'
      - httpApi: 'POST /company/locations'
      - httpApi: 'PUT /company/locations/{id}'
      - httpApi: 'DELETE /company/locations/{id}'

      - httpApi: 'GET /company/regions'
      - httpApi: 'GET /company/regions/{id}'
      - httpApi: 'POST /company/regions'
      - httpApi: 'PUT /company/regions/{id}'
      - httpApi: 'DELETE /company/regions/{id}'
    environment:
        DB_USER : "postgres"
        DB_HOST : "database-1.cjrlbyedtzo5.us-east-1.rds.amazonaws.com"
        DB_NAME : "postgres"
        DB_PASSWORLD : "5562#Tncosane#"
        DB_PORT : 5432
